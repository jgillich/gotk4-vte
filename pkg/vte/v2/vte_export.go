// Code generated by girgen. DO NOT EDIT.

package vte

import (
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <vte/vte.h>
import "C"

//export _gotk4_vte2_TerminalClass_bell
func _gotk4_vte2_TerminalClass_bell(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.Bell == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.Bell, got none")
	}

	overrides.Bell()
}

//export _gotk4_vte2_TerminalClass_char_size_changed
func _gotk4_vte2_TerminalClass_char_size_changed(arg0 *C.VteTerminal, arg1 C.guint, arg2 C.guint) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.CharSizeChanged == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.CharSizeChanged, got none")
	}

	var _charWidth uint  // out
	var _charHeight uint // out

	_charWidth = uint(arg1)
	_charHeight = uint(arg2)

	overrides.CharSizeChanged(_charWidth, _charHeight)
}

//export _gotk4_vte2_TerminalClass_child_exited
func _gotk4_vte2_TerminalClass_child_exited(arg0 *C.VteTerminal, arg1 C.int) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.ChildExited == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.ChildExited, got none")
	}

	var _status int // out

	_status = int(arg1)

	overrides.ChildExited(_status)
}

//export _gotk4_vte2_TerminalClass_commit
func _gotk4_vte2_TerminalClass_commit(arg0 *C.VteTerminal, arg1 *C.gchar, arg2 C.guint) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.Commit == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.Commit, got none")
	}

	var _text string // out
	var _size uint   // out

	_text = C.GoString((*C.gchar)(unsafe.Pointer(arg1)))
	_size = uint(arg2)

	overrides.Commit(_text, _size)
}

//export _gotk4_vte2_TerminalClass_contents_changed
func _gotk4_vte2_TerminalClass_contents_changed(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.ContentsChanged == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.ContentsChanged, got none")
	}

	overrides.ContentsChanged()
}

//export _gotk4_vte2_TerminalClass_copy_clipboard
func _gotk4_vte2_TerminalClass_copy_clipboard(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.CopyClipboard == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.CopyClipboard, got none")
	}

	overrides.CopyClipboard()
}

//export _gotk4_vte2_TerminalClass_cursor_moved
func _gotk4_vte2_TerminalClass_cursor_moved(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.CursorMoved == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.CursorMoved, got none")
	}

	overrides.CursorMoved()
}

//export _gotk4_vte2_TerminalClass_decrease_font_size
func _gotk4_vte2_TerminalClass_decrease_font_size(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.DecreaseFontSize == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.DecreaseFontSize, got none")
	}

	overrides.DecreaseFontSize()
}

//export _gotk4_vte2_TerminalClass_deiconify_window
func _gotk4_vte2_TerminalClass_deiconify_window(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.DeiconifyWindow == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.DeiconifyWindow, got none")
	}

	overrides.DeiconifyWindow()
}

//export _gotk4_vte2_TerminalClass_encoding_changed
func _gotk4_vte2_TerminalClass_encoding_changed(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.EncodingChanged == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.EncodingChanged, got none")
	}

	overrides.EncodingChanged()
}

//export _gotk4_vte2_TerminalClass_eof
func _gotk4_vte2_TerminalClass_eof(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.EOF == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.EOF, got none")
	}

	overrides.EOF()
}

//export _gotk4_vte2_TerminalClass_icon_title_changed
func _gotk4_vte2_TerminalClass_icon_title_changed(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.IconTitleChanged == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.IconTitleChanged, got none")
	}

	overrides.IconTitleChanged()
}

//export _gotk4_vte2_TerminalClass_iconify_window
func _gotk4_vte2_TerminalClass_iconify_window(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.IconifyWindow == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.IconifyWindow, got none")
	}

	overrides.IconifyWindow()
}

//export _gotk4_vte2_TerminalClass_increase_font_size
func _gotk4_vte2_TerminalClass_increase_font_size(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.IncreaseFontSize == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.IncreaseFontSize, got none")
	}

	overrides.IncreaseFontSize()
}

//export _gotk4_vte2_TerminalClass_lower_window
func _gotk4_vte2_TerminalClass_lower_window(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.LowerWindow == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.LowerWindow, got none")
	}

	overrides.LowerWindow()
}

//export _gotk4_vte2_TerminalClass_maximize_window
func _gotk4_vte2_TerminalClass_maximize_window(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.MaximizeWindow == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.MaximizeWindow, got none")
	}

	overrides.MaximizeWindow()
}

//export _gotk4_vte2_TerminalClass_move_window
func _gotk4_vte2_TerminalClass_move_window(arg0 *C.VteTerminal, arg1 C.guint, arg2 C.guint) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.MoveWindow == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.MoveWindow, got none")
	}

	var _x uint // out
	var _y uint // out

	_x = uint(arg1)
	_y = uint(arg2)

	overrides.MoveWindow(_x, _y)
}

//export _gotk4_vte2_TerminalClass_notification_received
func _gotk4_vte2_TerminalClass_notification_received(arg0 *C.VteTerminal, arg1 *C.gchar, arg2 *C.gchar) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.NotificationReceived == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.NotificationReceived, got none")
	}

	var _summary string // out
	var _body string    // out

	_summary = C.GoString((*C.gchar)(unsafe.Pointer(arg1)))
	_body = C.GoString((*C.gchar)(unsafe.Pointer(arg2)))

	overrides.NotificationReceived(_summary, _body)
}

//export _gotk4_vte2_TerminalClass_paste_clipboard
func _gotk4_vte2_TerminalClass_paste_clipboard(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.PasteClipboard == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.PasteClipboard, got none")
	}

	overrides.PasteClipboard()
}

//export _gotk4_vte2_TerminalClass_raise_window
func _gotk4_vte2_TerminalClass_raise_window(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.RaiseWindow == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.RaiseWindow, got none")
	}

	overrides.RaiseWindow()
}

//export _gotk4_vte2_TerminalClass_refresh_window
func _gotk4_vte2_TerminalClass_refresh_window(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.RefreshWindow == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.RefreshWindow, got none")
	}

	overrides.RefreshWindow()
}

//export _gotk4_vte2_TerminalClass_resize_window
func _gotk4_vte2_TerminalClass_resize_window(arg0 *C.VteTerminal, arg1 C.guint, arg2 C.guint) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.ResizeWindow == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.ResizeWindow, got none")
	}

	var _width uint  // out
	var _height uint // out

	_width = uint(arg1)
	_height = uint(arg2)

	overrides.ResizeWindow(_width, _height)
}

//export _gotk4_vte2_TerminalClass_restore_window
func _gotk4_vte2_TerminalClass_restore_window(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.RestoreWindow == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.RestoreWindow, got none")
	}

	overrides.RestoreWindow()
}

//export _gotk4_vte2_TerminalClass_selection_changed
func _gotk4_vte2_TerminalClass_selection_changed(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.SelectionChanged == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.SelectionChanged, got none")
	}

	overrides.SelectionChanged()
}

//export _gotk4_vte2_TerminalClass_shell_precmd
func _gotk4_vte2_TerminalClass_shell_precmd(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.ShellPrecmd == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.ShellPrecmd, got none")
	}

	overrides.ShellPrecmd()
}

//export _gotk4_vte2_TerminalClass_shell_preexec
func _gotk4_vte2_TerminalClass_shell_preexec(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.ShellPreexec == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.ShellPreexec, got none")
	}

	overrides.ShellPreexec()
}

//export _gotk4_vte2_TerminalClass_text_deleted
func _gotk4_vte2_TerminalClass_text_deleted(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.TextDeleted == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.TextDeleted, got none")
	}

	overrides.TextDeleted()
}

//export _gotk4_vte2_TerminalClass_text_inserted
func _gotk4_vte2_TerminalClass_text_inserted(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.TextInserted == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.TextInserted, got none")
	}

	overrides.TextInserted()
}

//export _gotk4_vte2_TerminalClass_text_modified
func _gotk4_vte2_TerminalClass_text_modified(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.TextModified == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.TextModified, got none")
	}

	overrides.TextModified()
}

//export _gotk4_vte2_TerminalClass_text_scrolled
func _gotk4_vte2_TerminalClass_text_scrolled(arg0 *C.VteTerminal, arg1 C.gint) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.TextScrolled == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.TextScrolled, got none")
	}

	var _delta int // out

	_delta = int(arg1)

	overrides.TextScrolled(_delta)
}

//export _gotk4_vte2_TerminalClass_window_title_changed
func _gotk4_vte2_TerminalClass_window_title_changed(arg0 *C.VteTerminal) {
	instance0 := coreglib.Take(unsafe.Pointer(arg0))
	overrides := coreglib.OverridesFromObj[TerminalOverrides](instance0)
	if overrides.WindowTitleChanged == nil {
		panic("gotk4: " + instance0.TypeFromInstance().String() + ": expected TerminalOverrides.WindowTitleChanged, got none")
	}

	overrides.WindowTitleChanged()
}

//export _gotk4_vte2_Terminal_ConnectIconTitleChanged
func _gotk4_vte2_Terminal_ConnectIconTitleChanged(arg0 C.gpointer, arg1 C.guintptr) {
	var f func()
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg1))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func())
	}

	f()
}

//export _gotk4_vte2_Terminal_ConnectTextDeleted
func _gotk4_vte2_Terminal_ConnectTextDeleted(arg0 C.gpointer, arg1 C.guintptr) {
	var f func()
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg1))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func())
	}

	f()
}

//export _gotk4_vte2_Terminal_ConnectTextInserted
func _gotk4_vte2_Terminal_ConnectTextInserted(arg0 C.gpointer, arg1 C.guintptr) {
	var f func()
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg1))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func())
	}

	f()
}

//export _gotk4_vte2_Terminal_ConnectTextModified
func _gotk4_vte2_Terminal_ConnectTextModified(arg0 C.gpointer, arg1 C.guintptr) {
	var f func()
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg1))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func())
	}

	f()
}

//export _gotk4_vte2_Terminal_ConnectTextScrolled
func _gotk4_vte2_Terminal_ConnectTextScrolled(arg0 C.gpointer, arg1 C.gint, arg2 C.guintptr) {
	var f func(delta int)
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg2))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func(delta int))
	}

	var _delta int // out

	_delta = int(arg1)

	f(_delta)
}
